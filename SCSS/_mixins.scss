/*------------------------------------------------------
Fichier SCSS:
   Mixins

Creation: 31/12/2021
Auteur: BTC
---------------------------------------------------------*/

/*---------------------------------------------------------*/
/* Mixin pour déclarer une boite flex
Nom: M_flex_box
Fonction: Déclarer une boite flex_box avec sesparamètres principaux
Parametres:
    $direction: row pour hirizontal et column pour vertical
    $aligmenent: Organisation des items
        /* Alignement « géométrique » */
/* justify-content: center;     /* Éléments groupés au centre */
/*  justify-content: start;      /* Éléments groupés au début */
/*  justify-content: end;        /* Éléments groupés à la fin */
/*  justify-content: flex-start; /* Éléments flexibles groupés au début */
/*  justify-content: flex-end;   /* Éléments flexibles groupés à la fin */
/*  justify-content: left;       /* Éléments groupés à gauche */
/*  justify-content: right;      /* Éléments groupés à droite */

/* Alignement par rapport à la ligne de base */
/* justify-content ne prend pas de valeurs relatives à la ligne de base */

/* Alignement normal */
/*  justify-content: normal;

        /* Alignement distribué */
/* justify-content: space-between; /* Les éléments sont répartis équitablement
                                        Le bord du premier est aligné sur le
                                        début du conteneur et la fin du dernier
                                        est alignée sur la fin du conteneur */
/* justify-content: space-around;  /* Les éléments sont répartis équitablement
                                        À chaque extrémité, entre le bord du
                                        conteneur et le premier/dernier élément
                                        on a la moitié de l'espace appliqué entre
                                        chaque élément */
/* justify-content: space-evenly;  /* Les éléments sont répartis équitablement
                                        Tous les éléments sont séparés par le même
                                        espace */
/* justify-content: stretch;       /* Les éléments sont répartis équitablement et
                                        les éléments dimensionnés avec 'auto' sont
                                        étirés afin de remplir le conteneur */
/*---------------------------------------------------------*/

@mixin M_flex_box($direction, $alignement) {
  display: flex;
  flex-direction: $direction; /*row: Horizontal  column : vertical*/

  justify-content: $alignement; /* Alignement voir desc params*/
  box-sizing: border-box;
}

/*---------------------------------------------------------*/
/* Mixin pour affichage du logo
Nom: M_AffichageLogo
Fonction: Affiche le logo "Ohmyfood" en tête de l'écran
Parametres:
    aucun

/*---------------------------------------------------------*/

@mixin M_AffichageLogo {
  height: $HauteurOhmyfood; /*Hauteur forcée en pixels*/

  padding: 20px 5%; /* Espace intérieur Haut/bas et Gauche/droite*/
}

/*---------------------------------------------------------*/
/*---------------------------------------------------------*/
/* Mixin pour affichage d'une ombre 
Nom: M_AffichageOmbre
Fonction: Affiche une ombre sur un elt
Parametres:
    aucun

/*---------------------------------------------------------*/

@mixin M_AffichageOmbre {
  box-shadow: 5px 5px 10px $OmbreArticle; /* Décalage horizontal, décalage vertical, force du dégradé, couleur*/
}

/*---------------------------------------------------------*/
/* Mixin pour affichage d'un bouton
Nom: M_AffichageBouton
Fonction: Affiche un bouton avec couleurs dégradées et bords arrondis
Parametres:
    Couleur du texte
    Couleur fond haut
    Couleur fond bas

/*---------------------------------------------------------*/

@mixin M_AffichageBouton($texte, $FondHaut, $FondBas) {
}

/*---------------------------------------------------------*/
/* keyframes spinner
Nom: K_spinner
Fonction: Affiche un rond d'attenee
Parametres:
  aucun

/*---------------------------------------------------------*/
@keyframes spinner {
  0% {
    transform: translate3d(-50%, -50%, 0) rotate(0deg);
  }
  100% {
    transform: translate3d(-50%, -50%, 0) rotate(360deg);
  }
}
.spin::before {
  animation: 1.5s linear infinite spinner;
  animation-play-state: inherit;
  border: solid 5px #cfd0d1;
  border-bottom-color: #1c87c9;
  border-radius: 50%;
  content: "";
  height: 40px;
  width: 40px;
  position: absolute;
  top: 10%;
  left: 10%;
  transform: translate3d(-50%, -50%, 0);
  will-change: transform;
}
